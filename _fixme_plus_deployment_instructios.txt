# Portfolio Website Customization & Deployment Guide

## Quick Start
1. The site is already running locally at http://localhost:8000
2. To stop the local server: Press Ctrl+C in the terminal
3. To restart the local server: Run `python3 -m http.server 8000`

## Customization Steps

### 1. Basic Information
- Update the title in the `<title>` tag
- Replace "Your Name" in the footer
- Update the copyright year if needed

### 2. Profile Section
- Replace "Software Developer & Technology Enthusiast" with your title
- Update the profile picture by replacing "RemyFace.JPG" with your image
  - Recommended size: 512x512 pixels
  - Supported formats: JPG, PNG, WebP
  - Keep file size under 1MB for optimal loading

### 3. About Section
- Replace the placeholder text in the About section with your bio
- Update the Skills section with your actual skills
- Format: Replace `[Skill 1]`, `[Skill 2]`, etc. with your skills
- Add or remove skill tags as needed

### 4. Projects Section
For each project card:
- Replace `[Project Name]` with your project title
- Replace `[Brief project description]` with a 2-3 sentence description
- Update `[Tech 1]`, `[Tech 2]` with technologies used
- Add project links if available
- Add or remove project cards as needed

### 5. Contact Section
- Update the contact message
- Replace social media links:
  - Update `your.email@example.com` with your email
  - Update `yourusername` in GitHub and LinkedIn URLs
- Add or remove social media links as needed

### 6. Form Functionality
To make the contact form functional:
1. Choose a form handling service (e.g., Formspree, Netlify Forms)
2. Add the form action URL
3. Update the form method (POST/GET)
4. Add any required fields or validation

## Deployment to GitHub Pages

### Automatic Deployment
1. Push your changes to the main branch
2. GitHub Pages will automatically deploy your site
3. Your site will be available at: https://[your-username].github.io

### Manual Deployment
1. Ensure all files are committed
2. Push to GitHub:
   ```bash
   git add .
   git commit -m "Update portfolio"
   git push origin main
   ```
3. Wait a few minutes for deployment

## Custom Domain Setup (Optional)
1. Purchase a domain from a domain registrar
2. Add your domain to GitHub Pages:
   - Go to repository Settings > Pages
   - Add your custom domain
3. Configure DNS settings with your registrar
4. Wait for DNS propagation (can take up to 24 hours)

## Maintenance Tips
1. Keep dependencies updated
2. Regularly check for broken links
3. Update project information as needed
4. Monitor form submissions
5. Check site performance using tools like Google PageSpeed Insights

## Troubleshooting
- If images don't load: Check file paths and case sensitivity
- If styles don't apply: Check internet connection (Tailwind CSS is loaded from CDN)
- If form doesn't work: Check form handling service configuration
- If deployment fails: Check GitHub Actions logs

## Performance Optimization
1. Optimize images before uploading
2. Consider self-hosting Tailwind CSS for production
3. Minimize custom JavaScript
4. Use lazy loading for images
5. Enable browser caching

## Security Considerations
1. Don't include sensitive information in the code
2. Use HTTPS for all external resources
3. Implement CSRF protection for the contact form
4. Regularly update dependencies
5. Monitor for security vulnerabilities

## Additional Resources
- Tailwind CSS Documentation: https://tailwindcss.com/docs
- GitHub Pages Documentation: https://docs.github.com/en/pages
- Font Awesome Icons: https://fontawesome.com/icons
- Form Handling Services:
  - Formspree: https://formspree.io
  - Netlify Forms: https://www.netlify.com/products/forms/

## Need Help?
- Check GitHub Issues
- Review GitHub Pages documentation
- Contact GitHub Support
- Join GitHub Community forums 